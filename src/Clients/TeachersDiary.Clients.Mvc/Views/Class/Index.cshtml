@model ClassViewModel

@{
    Layout = LayoutConstants.Layout;
}

@section styles{
    <link href='https://cdn.datatables.net/1.10.15/css/jquery.dataTables.min.css' rel='stylesheet' type='text/css'>
}

<div class="row border-bottom white-bg dashboard-header">
    <h2 class="text-center">@Model.Name клас</h2>
    
    <a href="@(Url.Action<ClassController>(x => x.All()))">
        Обратно
    </a>

    @using (Html.BeginForm<AbsenseController>(c => c.CalculateAbsenses(null), FormMethod.Post, null, new {id= "student-form"}))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(x => Model.Id)
        @Html.HiddenFor(x => Model.Name)
        @Html.ValidationSummary(true, null, new { @class = "text-danger" })

        <table id="student-grid" class="display">
            <thead>
            <tr>
                <th class="text-center" colspan="2">Ученик</th>
                <th class="text-center" colspan="2">Септември - Януари</th>
                <th class="text-center" colspan="2">Февруари</th>
                <th class="text-center" colspan="2">Март</th>
                <th class="text-center" colspan="2">Април</th>
                <th class="text-center" colspan="2">Май</th>
                <th class="text-center" colspan="2">Юни</th>
                <th class="text-center" colspan="2">Общо</th>
            </tr>
            <tr>
                <th class="text-center">#</th>
                <th class="text-center">Име</th>
                <th class="text-center">Изв</th>
                <th class="text-center">Неизв</th>
                <th class="text-center">Изв</th>
                <th class="text-center">Неизв</th>
                <th class="text-center">Изв</th>
                <th class="text-center">Неизв</th>
                <th class="text-center">Изв</th>
                <th class="text-center">Неизв</th>
                <th class="text-center">Изв</th>
                <th class="text-center">Неизв</th>
                <th class="text-center">Изв</th>
                <th class="text-center">Неизв</th>
                <th class="text-center">Изв</th>
                <th class="text-center">Неизв</th>
            </tr>
            </thead>
            <tbody>
            @for (var studentIndex = 0; studentIndex < Model.Students.Count; studentIndex++)
            {
                <tr>
                    <td class="text-center">
                        @(studentIndex + 1)
                    </td>
                    <td class="text-center">
                        @Html.HiddenFor(x => x.Students[studentIndex].FirstName)
                        @Html.HiddenFor(x => x.Students[studentIndex].LastName)
                        @Html.HiddenFor(x => x.Students[studentIndex].Id)

                        @Model.Students[studentIndex].FirstName @Model.Students[studentIndex].LastName
                    </td>

                    @{ int mounthIndex = 0; }


                    @for (var absenceIndex = 0; absenceIndex < Model.Students[studentIndex].Absences.Count; absenceIndex++)
                    {
                        @Html.HiddenFor(x => x.Students[studentIndex].Absences[absenceIndex].EncodedId)
                        @Html.HiddenFor(x => x.Students[studentIndex].Absences[absenceIndex].MonthId)
                        @Html.HiddenFor(x => x.Students[studentIndex].Absences[absenceIndex].EncodedStudentId)
                        @Html.HiddenFor(x => x.Students[studentIndex].Absences[absenceIndex].Excused)
                        @Html.HiddenFor(x => x.Students[studentIndex].Absences[absenceIndex].NotExcused)

                        <td class="text-center">
                            @Html.Raw((Model.Students[studentIndex].Absences[absenceIndex].Excused.ToFractionNumber()))
                        </td>

                        <td class="text-center">
                            @Html.Raw((Model.Students[studentIndex].Absences[absenceIndex].NotExcused.ToFractionNumber()))
                        </td>
                        {
                            mounthIndex += 1;
                        }
                    }

                    @while (mounthIndex < 6)
                    {
                        <td></td>
                        <td></td>
                        {
                            mounthIndex += 1;
                        }
                    }

                    <td class="text-center">
                        @Html.TextBoxFor(x => Model.Students[studentIndex].TotalExcusedAbsences, new {maxlength = "8", size = "8", @class = "total-absences"})
                        <span class="hidden-values" style="display: none;"></span>
                    </td>

                    <td class="text-center">
                        @Html.TextBoxFor(x =>
                                            Model.Students[studentIndex].TotalNotExcusedAbsences,
                                            new
                                            {
                                                @class = "total-absences",
                                                maxlength = "8",
                                                size = "8",
                                                Value = Model.Students[studentIndex].GetTotalNotExcusedAbsences()
                                            })

                        <span class="hidden-values" style="display: none;"></span>
                    </td>
                </tr>
            }
            <tr>
                <td class="text-center"></td>
                <td class="text-center">Общо</td>
                <td class="text-center" style="color: red">@Model.Students.Select(x => x.Absences.Where(y => y.MonthId == 1).Sum(y => y.Excused)).Sum()</td>
                <td class="text-center" style="color: red">@Model.Students.Select(x => x.Absences.Where(y => y.MonthId == 1).Sum(y => y.NotExcused)).Sum().ToFractionNumber()</td>
                <td class="text-center" style="color: red">@Model.Students.Select(x => x.Absences.Where(y => y.MonthId == 2).Sum(y => y.Excused)).Sum()</td>
                <td class="text-center" style="color: red">@Model.Students.Select(x => x.Absences.Where(y => y.MonthId == 2).Sum(y => y.NotExcused)).Sum().ToFractionNumber()</td>
                <td class="text-center" style="color: red">@Model.Students.Select(x => x.Absences.Where(y => y.MonthId == 3).Sum(y => y.Excused)).Sum()</td>
                <td class="text-center" style="color: red">@Model.Students.Select(x => x.Absences.Where(y => y.MonthId == 3).Sum(y => y.NotExcused)).Sum().ToFractionNumber()</td>
                <td class="text-center" style="color: red">@Model.Students.Select(x => x.Absences.Where(y => y.MonthId == 4).Sum(y => y.Excused)).Sum()</td>
                <td class="text-center" style="color: red">@Model.Students.Select(x => x.Absences.Where(y => y.MonthId == 4).Sum(y => y.NotExcused)).Sum().ToFractionNumber()</td>
                <td class="text-center" style="color: red">@Model.Students.Select(x => x.Absences.Where(y => y.MonthId == 5).Sum(y => y.Excused)).Sum()</td>
                <td class="text-center" style="color: red">@Model.Students.Select(x => x.Absences.Where(y => y.MonthId == 5).Sum(y => y.NotExcused)).Sum().ToFractionNumber()</td>
                <td class="text-center" style="color: red">@Model.Students.Select(x => x.Absences.Where(y => y.MonthId == 6).Sum(y => y.Excused)).Sum()</td>
                <td class="text-center" style="color: red">@Model.Students.Select(x => x.Absences.Where(y => y.MonthId == 6).Sum(y => y.NotExcused)).Sum().ToFractionNumber()</td>
                <td class="text-center" style="color: red">@Model.TotalExcusedAbsences</td>
                <td class="text-center" style="color: red">@Model.TotalNotExcusedAbsences.ToFractionNumber()</td>
            </tr>

            </tbody>
        </table>
    }
    
</div>

@section scripts {
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/bundles/student-controller")
}