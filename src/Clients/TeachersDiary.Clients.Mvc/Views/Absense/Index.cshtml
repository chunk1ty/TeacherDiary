@using TeachersDiary.Clients.Mvc.Infrastructure.Constants
@model ClassViewModel

@{
    Layout = LayoutConstants.Layout;
}

@section styles{
    <link href='https://cdn.datatables.net/1.10.15/css/jquery.dataTables.min.css' rel='stylesheet' type='text/css'>
}

<div class="row border-bottom white-bg dashboard-header">
    <h2 id="class-name" class="text-center">@Model.Name клас</h2>
    
    <a href="@(Url.Action<ClassController>(x => x.All()))">
        Обратно
    </a>
    
    @using (Html.BeginForm<AbsenseController>(c => c.Delete(string.Empty), FormMethod.Post, null, new {id = "absence-delete-form" }))
    {
        @Html.HiddenFor(x => Model.Id)
        @Html.AntiForgeryToken()      
        @Html.ValidationSummary(true, null, new { @class = "text-danger" })

        <div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteLabel">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                        <h4 class="modal-title" id="deleteLabel">
                            Сигурни ли сте че искате да изтриете всички отсъствията за <span style="color: red">@Model.Name</span> клас ?
                        </h4>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Откажи</button>
                        <button type="button" class="btn btn-primary" id="confirm-delete-absence-btn">Потвърди</button>
                    </div>
                </div>
            </div>
        </div>
    }

    @using (Html.BeginForm<AbsenseController>(c => c.CalculateAbsenses(null, string.Empty), FormMethod.Post, null, new {id= "student-form"}))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(x => Model.Id)
        @Html.HiddenFor(x => Model.Name)
        @Html.ValidationSummary(true, null, new { @class = "text-danger" })

        <table id="student-grid">
            <thead>
            <tr>
                <th class="text-center" colspan="2">Ученик</th>
                <th class="text-center" colspan="2">Септември</th>
                <th class="text-center" colspan="2">Октомври</th>
                <th class="text-center" colspan="2">Ноември</th>
                <th class="text-center" colspan="2">Декември</th>
                <th class="text-center" colspan="2">Януари</th>
                <th class="text-center" colspan="2">Февруари</th>
                <th class="text-center" colspan="2">Март</th>
                <th class="text-center" colspan="2">Април</th>
                <th class="text-center" colspan="2">Май</th>
                <th class="text-center" colspan="2">Юни</th>
                <th class="text-center" colspan="2">Общо</th>
            </tr>
            <tr>
                <th class="text-center">№</th>
                <th class="text-center">Име</th>
                <th class="text-center">Изв</th>
                <th class="text-center">Неизв</th>
                <th class="text-center">Изв</th>
                <th class="text-center">Неизв</th>
                <th class="text-center">Изв</th>
                <th class="text-center">Неизв</th>
                <th class="text-center">Изв</th>
                <th class="text-center">Неизв</th>
                <th class="text-center">Изв</th>
                <th class="text-center">Неизв</th>
                <th class="text-center">Изв</th>
                <th class="text-center">Неизв</th>
                <th class="text-center">Изв</th>
                <th class="text-center">Неизв</th>
                <th class="text-center">Изв</th>
                <th class="text-center">Неизв</th>
                <th class="text-center">Изв</th>
                <th class="text-center">Неизв</th>
                <th class="text-center">Изв</th>
                <th class="text-center">Неизв</th>
                <th class="text-center">Изв</th>
                <th class="text-center">Неизв</th>
            </tr>
            </thead>
            <tbody>
            @for (var studentIndex = 0; studentIndex < Model.Students.Count; studentIndex++)
            {
                <tr>
                    <td class="text-center">
                        @Html.HiddenFor(x => x.Students[studentIndex].Number)
                        @Model.Students[studentIndex].Number
                    </td>
                    <td class="text-center">
                        @Html.HiddenFor(x => x.Students[studentIndex].FirstName)
                        @Html.HiddenFor(x => x.Students[studentIndex].LastName)
                        @Html.HiddenFor(x => x.Students[studentIndex].Id)

                        @Model.Students[studentIndex].FirstName @Model.Students[studentIndex].LastName
                    </td>

                    @{ int mounthIndex = 0; }

                    @*TODO order students in the back end (sql query)*@
                    @{ Model.Students = Model.Students.OrderBy(x => x.Number).ToList(); }

                    @for (var absenceIndex = 0; absenceIndex < Model.Students[studentIndex].Absences.Count; absenceIndex++)
                    {
                        mounthIndex += 1;

                        @Html.HiddenFor(x => x.Students[studentIndex].Absences[absenceIndex].Id)
                        @Html.HiddenFor(x => x.Students[studentIndex].Absences[absenceIndex].MonthId)
                        @Html.HiddenFor(x => x.Students[studentIndex].Absences[absenceIndex].StudentId)
                        @Html.HiddenFor(x => x.Students[studentIndex].Absences[absenceIndex].Excused)
                        @Html.HiddenFor(x => x.Students[studentIndex].Absences[absenceIndex].NotExcused)

                        <td class="text-center">
                            @Html.Raw(Model.Students[studentIndex].Absences[absenceIndex].Excused.ToFractionNumber())
                        </td>

                        <td class="text-center">
                            @Html.Raw(Model.Students[studentIndex].Absences[absenceIndex].NotExcused.ToFractionNumber())
                        </td>
                    }

                    @while (mounthIndex < 10)
                    {
                        <td></td>
                        <td></td>
                        {
                            mounthIndex += 1;
                        }
                    }

                    <td class="text-center">
                        @Html.TextBoxFor(x => Model.Students[studentIndex].TotalExcusedAbsences, new {maxlength = "8", size = "8", @class = "total-absences"})
                        <span class="hidden-values" style="display: none;"></span>
                    </td>

                    <td class="text-center">
                        @Html.TextBoxFor(x =>
                            Model.Students[studentIndex].TotalNotExcusedAbsences,
                            new
                            {
                                @class = "total-absences",
                                maxlength = "8",
                                size = "8",
                                Value = Model.Students[studentIndex].GetTotalNotExcusedAbsences()
                            })

                        <span class="hidden-values" style="display: none;"></span>
                    </td>
                </tr>
            }
            <tr>
                <td class="text-center"></td>
                <td class="text-center">Общо</td>
                <td class="text-center" style="color: red">@Model.Students.Select(x => x.Absences.Where(y => y.MonthId == 9).Sum(y => y.Excused)).Sum()</td>
                <td class="text-center" style="color: red">@Model.Students.Select(x => x.Absences.Where(y => y.MonthId == 9).Sum(y => y.NotExcused)).Sum().ToFractionNumber()</td>
                <td class="text-center" style="color: red">@Model.Students.Select(x => x.Absences.Where(y => y.MonthId == 10).Sum(y => y.Excused)).Sum()</td>
                <td class="text-center" style="color: red">@Model.Students.Select(x => x.Absences.Where(y => y.MonthId == 10).Sum(y => y.NotExcused)).Sum().ToFractionNumber()</td>
                <td class="text-center" style="color: red">@Model.Students.Select(x => x.Absences.Where(y => y.MonthId == 11).Sum(y => y.Excused)).Sum()</td>
                <td class="text-center" style="color: red">@Model.Students.Select(x => x.Absences.Where(y => y.MonthId == 11).Sum(y => y.NotExcused)).Sum().ToFractionNumber()</td>
                <td class="text-center" style="color: red">@Model.Students.Select(x => x.Absences.Where(y => y.MonthId == 12).Sum(y => y.Excused)).Sum()</td>
                <td class="text-center" style="color: red">@Model.Students.Select(x => x.Absences.Where(y => y.MonthId == 12).Sum(y => y.NotExcused)).Sum().ToFractionNumber()</td>
                <td class="text-center" style="color: red">@Model.Students.Select(x => x.Absences.Where(y => y.MonthId == 13).Sum(y => y.Excused)).Sum()</td>
                <td class="text-center" style="color: red">@Model.Students.Select(x => x.Absences.Where(y => y.MonthId == 13).Sum(y => y.NotExcused)).Sum().ToFractionNumber()</td>
                <td class="text-center" style="color: red">@Model.Students.Select(x => x.Absences.Where(y => y.MonthId == 14).Sum(y => y.Excused)).Sum()</td>
                <td class="text-center" style="color: red">@Model.Students.Select(x => x.Absences.Where(y => y.MonthId == 14).Sum(y => y.NotExcused)).Sum().ToFractionNumber()</td>
                <td class="text-center" style="color: red">@Model.Students.Select(x => x.Absences.Where(y => y.MonthId == 15).Sum(y => y.Excused)).Sum()</td>
                <td class="text-center" style="color: red">@Model.Students.Select(x => x.Absences.Where(y => y.MonthId == 15).Sum(y => y.NotExcused)).Sum().ToFractionNumber()</td>
                <td class="text-center" style="color: red">@Model.Students.Select(x => x.Absences.Where(y => y.MonthId == 16).Sum(y => y.Excused)).Sum()</td>
                <td class="text-center" style="color: red">@Model.Students.Select(x => x.Absences.Where(y => y.MonthId == 16).Sum(y => y.NotExcused)).Sum().ToFractionNumber()</td>
                <td class="text-center" style="color: red">@Model.Students.Select(x => x.Absences.Where(y => y.MonthId == 17).Sum(y => y.Excused)).Sum()</td>
                <td class="text-center" style="color: red">@Model.Students.Select(x => x.Absences.Where(y => y.MonthId == 17).Sum(y => y.NotExcused)).Sum().ToFractionNumber()</td>
                <td class="text-center" style="color: red">@Model.Students.Select(x => x.Absences.Where(y => y.MonthId == 18).Sum(y => y.Excused)).Sum()</td>
                <td class="text-center" style="color: red">@Model.Students.Select(x => x.Absences.Where(y => y.MonthId == 18).Sum(y => y.NotExcused)).Sum().ToFractionNumber()</td>
                <td class="text-center" style="color: red">@Model.TotalExcusedAbsences</td>
                <td class="text-center" style="color: red">@Model.TotalNotExcusedAbsences.ToFractionNumber()</td>
            </tr>

            </tbody>
        </table>

        <div class="modal fade" id="selectMonthModal" tabindex="-1" role="dialog" aria-labelledby="selectMonthLabel">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                        <h4 class="modal-title" id="selectMonthLabel">Изберете месец</h4>
                    </div>
                    <div class="modal-body">
                        @Html.DropDownList(
                            "month",
                            new SelectList(Model.AvailableMonths.Select(x => new { Value = x.Id, Text = x.Name}),"Value","Text"),
                            new {@class = "form-control m-b" })
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Откажи</button>
                        <button type="button" id="sent-data-btn" class="btn btn-primary">Потвърди</button>
                    </div>
                </div>
            </div>
        </div>
    }
    
</div>

@section scripts {
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/bundles/absence-controller")
}